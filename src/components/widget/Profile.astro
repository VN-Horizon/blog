---
import { Icon } from "astro-icon/components";
import { profileConfig } from "../../config";
import { url } from "../../utils/url-utils";
import ImageWrapper from "../misc/ImageWrapper.astro";

const config = profileConfig;
---
<div class="card-base p-3">
    <a aria-label="Go to About Page" href={url('/about/')}
       class="group block relative mx-auto mt-1 lg:mx-0 lg:mt-0 mb-3
       max-w-[12rem] lg:max-w-none overflow-hidden rounded-xl active:scale-95">
        <div class="absolute transition pointer-events-none group-hover:bg-black/30 group-active:bg-black/50
        w-full h-full z-50 flex items-center justify-center">
            <Icon name="fa6-regular:address-card"
                  class="transition opacity-0 scale-90 group-hover:scale-100 group-hover:opacity-100 text-white text-5xl">
            </Icon>
        </div>
        <div class="!bg-transparent mx-auto lg:w-full h-full lg:mt-0 overflow-hidden relative">
            <ImageWrapper 
                src={config.avatar || ""} 
                alt="Profile Image of the Author" 
                class="w-full h-full"
                transparent no-transition
                id="profile-avatar-dark"
            ></ImageWrapper>
            <ImageWrapper 
                src={config.avatarLight || config.avatar || ""} 
                alt="Profile Image of the Author (Light)" 
                class="w-full h-full absolute inset-0"
                transparent no-transition
                id="profile-avatar-light"
            ></ImageWrapper>
        </div>
    </a>
    <div class="px-2">
        <!-- <div class="font-bold text-xl text-center mb-1 dark:text-neutral-50 transition">{config.name}</div>
        <div class="h-1 w-5 bg-[var(--primary)] mx-auto rounded-full mb-2 transition"></div> -->
        <div class="text-center text-neutral-400 mb-2.5 transition">{config.bio}</div>
        <div class="flex flex-wrap gap-2 justify-center mb-1">
            {config.links.length > 1 && config.links.map(item =>
                    <a rel="me" aria-label={item.name} href={item.url} target="_blank" class="btn-regular rounded-lg h-10 w-10 active:scale-90">
                        <Icon name={item.icon} class="text-[1.5rem]"></Icon>
                    </a>
            )}
            {config.links.length == 1 && <a rel="me" aria-label={config.links[0].name} href={config.links[0].url} target="_blank"
                                            class="btn-regular rounded-lg h-10 gap-2 px-3 font-bold active:scale-95">
                <Icon name={config.links[0].icon} class="text-[1.5rem]"></Icon>
                {config.links[0].name}
            </a>}
        </div>
    </div>
</div>

<script>
    function updateProfileAvatar() {
        const darkAvatar = document.getElementById('profile-avatar-dark');
        const lightAvatar = document.getElementById('profile-avatar-light');
        
        if (!darkAvatar || !lightAvatar) return;
        
        const isDark = document.documentElement.classList.contains('dark');
        
        console.log('Current theme is dark:', isDark);
        
        if (isDark) {
            // Show dark avatar, hide light avatar
            darkAvatar.style.display = 'block';
            lightAvatar.style.display = 'none';
            console.log('Switched to dark avatar');
        } else {
            // Show light avatar, hide dark avatar
            darkAvatar.style.display = 'none';
            lightAvatar.style.display = 'block';
            console.log('Switched to light avatar');
        }
    }
    
    // Update avatar on page load
    document.addEventListener('DOMContentLoaded', updateProfileAvatar);
    
    // Update avatar when theme changes
    const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
            if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
                updateProfileAvatar();
            }
        });
    });
    
    observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ['class']
    });
</script>

